/*
Copyright 2018 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was automatically generated by lister-gen

package internalversion

import (
	mobile "github.com/aerogear/mobile-crd-client/pkg/apis/mobile"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ClientLister helps list Clients.
type ClientLister interface {
	// List lists all Clients in the indexer.
	List(selector labels.Selector) (ret []*mobile.Client, err error)
	// Clients returns an object that can list and get Clients.
	Clients(namespace string) ClientNamespaceLister
	ClientListerExpansion
}

// clientLister implements the ClientLister interface.
type clientLister struct {
	indexer cache.Indexer
}

// NewClientLister returns a new ClientLister.
func NewClientLister(indexer cache.Indexer) ClientLister {
	return &clientLister{indexer: indexer}
}

// List lists all Clients in the indexer.
func (s *clientLister) List(selector labels.Selector) (ret []*mobile.Client, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*mobile.Client))
	})
	return ret, err
}

// Clients returns an object that can list and get Clients.
func (s *clientLister) Clients(namespace string) ClientNamespaceLister {
	return clientNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ClientNamespaceLister helps list and get Clients.
type ClientNamespaceLister interface {
	// List lists all Clients in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*mobile.Client, err error)
	// Get retrieves the Client from the indexer for a given namespace and name.
	Get(name string) (*mobile.Client, error)
	ClientNamespaceListerExpansion
}

// clientNamespaceLister implements the ClientNamespaceLister
// interface.
type clientNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Clients in the indexer for a given namespace.
func (s clientNamespaceLister) List(selector labels.Selector) (ret []*mobile.Client, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*mobile.Client))
	})
	return ret, err
}

// Get retrieves the Client from the indexer for a given namespace and name.
func (s clientNamespaceLister) Get(name string) (*mobile.Client, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(mobile.Resource("client"), name)
	}
	return obj.(*mobile.Client), nil
}
